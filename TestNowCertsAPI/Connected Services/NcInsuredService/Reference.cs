//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestNowCertsAPI.NcInsuredService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="https://www.nowcerts.com/", ConfigurationName="NcInsuredService.InsuredServiceSoap")]
    public interface InsuredServiceSoap {
        
        // CODEGEN: Generating message contract since message ImportInsuredRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="https://www.nowcerts.com/ImportInsured", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        TestNowCertsAPI.NcInsuredService.ImportInsuredResponse ImportInsured(TestNowCertsAPI.NcInsuredService.ImportInsuredRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.nowcerts.com/ImportInsured", ReplyAction="*")]
        System.Threading.Tasks.Task<TestNowCertsAPI.NcInsuredService.ImportInsuredResponse> ImportInsuredAsync(TestNowCertsAPI.NcInsuredService.ImportInsuredRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://www.nowcerts.com/")]
    public partial class NowCertsAuthenticationData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string tokenField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Token {
            get {
                return this.tokenField;
            }
            set {
                this.tokenField = value;
                this.RaisePropertyChanged("Token");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://www.nowcerts.com/")]
    public partial class NowCertsApiResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private NcApiStatus statusField;
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public NcApiStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("Message");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://www.nowcerts.com/")]
    public enum NcApiStatus {
        
        /// <remarks/>
        Error,
        
        /// <remarks/>
        Success,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://www.nowcerts.com/")]
    public partial class NcXDateAndLineOfBusiness : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime xDateField;
        
        private string lineOfBusinessNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public System.DateTime XDate {
            get {
                return this.xDateField;
            }
            set {
                this.xDateField = value;
                this.RaisePropertyChanged("XDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string LineOfBusinessName {
            get {
                return this.lineOfBusinessNameField;
            }
            set {
                this.lineOfBusinessNameField = value;
                this.RaisePropertyChanged("LineOfBusinessName");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://www.nowcerts.com/")]
    public partial class NcAgent : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string firstNameField;
        
        private string lastNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
                this.RaisePropertyChanged("FirstName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
                this.RaisePropertyChanged("LastName");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://www.nowcerts.com/")]
    public partial class NcInsured : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string commercialNameField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private NcInsuredType typeField;
        
        private string addressLine1Field;
        
        private string addressLine2Field;
        
        private string stateNameOrAbbreviationField;
        
        private string cityField;
        
        private string zipCodeField;
        
        private string eMailField;
        
        private string eMail2Field;
        
        private string eMail3Field;
        
        private string faxField;
        
        private string phoneField;
        
        private string cellPhoneField;
        
        private string smsPhoneField;
        
        private string descriptionField;
        
        private bool activeField;
        
        private string websiteField;
        
        private string fEINField;
        
        private string customerIdField;
        
        private string insuredIdField;
        
        private string[] customFieldsField;
        
        private NcAgent[] agentsField;
        
        private NcAgent[] cSRsField;
        
        private NcXDateAndLineOfBusiness[] xDatesAndLinesOfBusinessField;
        
        private string referralSourceCompanyNameField;
        
        private string primaryAgencyOfficeLocationNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string CommercialName {
            get {
                return this.commercialNameField;
            }
            set {
                this.commercialNameField = value;
                this.RaisePropertyChanged("CommercialName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
                this.RaisePropertyChanged("FirstName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
                this.RaisePropertyChanged("LastName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public NcInsuredType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string AddressLine1 {
            get {
                return this.addressLine1Field;
            }
            set {
                this.addressLine1Field = value;
                this.RaisePropertyChanged("AddressLine1");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string AddressLine2 {
            get {
                return this.addressLine2Field;
            }
            set {
                this.addressLine2Field = value;
                this.RaisePropertyChanged("AddressLine2");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string StateNameOrAbbreviation {
            get {
                return this.stateNameOrAbbreviationField;
            }
            set {
                this.stateNameOrAbbreviationField = value;
                this.RaisePropertyChanged("StateNameOrAbbreviation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
                this.RaisePropertyChanged("City");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string ZipCode {
            get {
                return this.zipCodeField;
            }
            set {
                this.zipCodeField = value;
                this.RaisePropertyChanged("ZipCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string EMail {
            get {
                return this.eMailField;
            }
            set {
                this.eMailField = value;
                this.RaisePropertyChanged("EMail");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string EMail2 {
            get {
                return this.eMail2Field;
            }
            set {
                this.eMail2Field = value;
                this.RaisePropertyChanged("EMail2");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string EMail3 {
            get {
                return this.eMail3Field;
            }
            set {
                this.eMail3Field = value;
                this.RaisePropertyChanged("EMail3");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string Fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
                this.RaisePropertyChanged("Fax");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
                this.RaisePropertyChanged("Phone");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string CellPhone {
            get {
                return this.cellPhoneField;
            }
            set {
                this.cellPhoneField = value;
                this.RaisePropertyChanged("CellPhone");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public string SmsPhone {
            get {
                return this.smsPhoneField;
            }
            set {
                this.smsPhoneField = value;
                this.RaisePropertyChanged("SmsPhone");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
                this.RaisePropertyChanged("Active");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        public string Website {
            get {
                return this.websiteField;
            }
            set {
                this.websiteField = value;
                this.RaisePropertyChanged("Website");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=19)]
        public string FEIN {
            get {
                return this.fEINField;
            }
            set {
                this.fEINField = value;
                this.RaisePropertyChanged("FEIN");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=20)]
        public string CustomerId {
            get {
                return this.customerIdField;
            }
            set {
                this.customerIdField = value;
                this.RaisePropertyChanged("CustomerId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=21)]
        public string InsuredId {
            get {
                return this.insuredIdField;
            }
            set {
                this.insuredIdField = value;
                this.RaisePropertyChanged("InsuredId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=22)]
        public string[] CustomFields {
            get {
                return this.customFieldsField;
            }
            set {
                this.customFieldsField = value;
                this.RaisePropertyChanged("CustomFields");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=23)]
        public NcAgent[] Agents {
            get {
                return this.agentsField;
            }
            set {
                this.agentsField = value;
                this.RaisePropertyChanged("Agents");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=24)]
        public NcAgent[] CSRs {
            get {
                return this.cSRsField;
            }
            set {
                this.cSRsField = value;
                this.RaisePropertyChanged("CSRs");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=25)]
        public NcXDateAndLineOfBusiness[] XDatesAndLinesOfBusiness {
            get {
                return this.xDatesAndLinesOfBusinessField;
            }
            set {
                this.xDatesAndLinesOfBusinessField = value;
                this.RaisePropertyChanged("XDatesAndLinesOfBusiness");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=26)]
        public string ReferralSourceCompanyName {
            get {
                return this.referralSourceCompanyNameField;
            }
            set {
                this.referralSourceCompanyNameField = value;
                this.RaisePropertyChanged("ReferralSourceCompanyName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=27)]
        public string PrimaryAgencyOfficeLocationName {
            get {
                return this.primaryAgencyOfficeLocationNameField;
            }
            set {
                this.primaryAgencyOfficeLocationNameField = value;
                this.RaisePropertyChanged("PrimaryAgencyOfficeLocationName");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://www.nowcerts.com/")]
    public enum NcInsuredType {
        
        /// <remarks/>
        Insured,
        
        /// <remarks/>
        Prospect,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ImportInsured", WrapperNamespace="https://www.nowcerts.com/", IsWrapped=true)]
    public partial class ImportInsuredRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="https://www.nowcerts.com/")]
        public TestNowCertsAPI.NcInsuredService.NowCertsAuthenticationData NowCertsAuthenticationData;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.nowcerts.com/", Order=0)]
        public TestNowCertsAPI.NcInsuredService.NcInsured insured;
        
        public ImportInsuredRequest() {
        }
        
        public ImportInsuredRequest(TestNowCertsAPI.NcInsuredService.NowCertsAuthenticationData NowCertsAuthenticationData, TestNowCertsAPI.NcInsuredService.NcInsured insured) {
            this.NowCertsAuthenticationData = NowCertsAuthenticationData;
            this.insured = insured;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ImportInsuredResponse", WrapperNamespace="https://www.nowcerts.com/", IsWrapped=true)]
    public partial class ImportInsuredResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.nowcerts.com/", Order=0)]
        public TestNowCertsAPI.NcInsuredService.NowCertsApiResult ImportInsuredResult;
        
        public ImportInsuredResponse() {
        }
        
        public ImportInsuredResponse(TestNowCertsAPI.NcInsuredService.NowCertsApiResult ImportInsuredResult) {
            this.ImportInsuredResult = ImportInsuredResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface InsuredServiceSoapChannel : TestNowCertsAPI.NcInsuredService.InsuredServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsuredServiceSoapClient : System.ServiceModel.ClientBase<TestNowCertsAPI.NcInsuredService.InsuredServiceSoap>, TestNowCertsAPI.NcInsuredService.InsuredServiceSoap {
        
        public InsuredServiceSoapClient() {
        }
        
        public InsuredServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public InsuredServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InsuredServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InsuredServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TestNowCertsAPI.NcInsuredService.ImportInsuredResponse TestNowCertsAPI.NcInsuredService.InsuredServiceSoap.ImportInsured(TestNowCertsAPI.NcInsuredService.ImportInsuredRequest request) {
            return base.Channel.ImportInsured(request);
        }
        
        public TestNowCertsAPI.NcInsuredService.NowCertsApiResult ImportInsured(TestNowCertsAPI.NcInsuredService.NowCertsAuthenticationData NowCertsAuthenticationData, TestNowCertsAPI.NcInsuredService.NcInsured insured) {
            TestNowCertsAPI.NcInsuredService.ImportInsuredRequest inValue = new TestNowCertsAPI.NcInsuredService.ImportInsuredRequest();
            inValue.NowCertsAuthenticationData = NowCertsAuthenticationData;
            inValue.insured = insured;
            TestNowCertsAPI.NcInsuredService.ImportInsuredResponse retVal = ((TestNowCertsAPI.NcInsuredService.InsuredServiceSoap)(this)).ImportInsured(inValue);
            return retVal.ImportInsuredResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<TestNowCertsAPI.NcInsuredService.ImportInsuredResponse> TestNowCertsAPI.NcInsuredService.InsuredServiceSoap.ImportInsuredAsync(TestNowCertsAPI.NcInsuredService.ImportInsuredRequest request) {
            return base.Channel.ImportInsuredAsync(request);
        }
        
        public System.Threading.Tasks.Task<TestNowCertsAPI.NcInsuredService.ImportInsuredResponse> ImportInsuredAsync(TestNowCertsAPI.NcInsuredService.NowCertsAuthenticationData NowCertsAuthenticationData, TestNowCertsAPI.NcInsuredService.NcInsured insured) {
            TestNowCertsAPI.NcInsuredService.ImportInsuredRequest inValue = new TestNowCertsAPI.NcInsuredService.ImportInsuredRequest();
            inValue.NowCertsAuthenticationData = NowCertsAuthenticationData;
            inValue.insured = insured;
            return ((TestNowCertsAPI.NcInsuredService.InsuredServiceSoap)(this)).ImportInsuredAsync(inValue);
        }
    }
}
